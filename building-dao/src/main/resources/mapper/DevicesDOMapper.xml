<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.building.dao.mapper.DevicesDOMapper">
  <resultMap id="BaseResultMap" type="com.building.dao.entity.DevicesDO">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="device_code" jdbcType="VARCHAR" property="deviceCode" />
    <result column="device_type" jdbcType="VARCHAR" property="deviceType" />
    <result column="device_name" jdbcType="VARCHAR" property="deviceName" />
    <result column="device_status" jdbcType="VARCHAR" property="deviceStatus" />
    <result column="device_address" jdbcType="VARCHAR" property="deviceAddress" />
    <result column="device_monitor_url" jdbcType="VARCHAR" property="deviceMonitorUrl" />
    <result column="relation_code" jdbcType="VARCHAR" property="relationCode" />
    <result column="is_deleted" jdbcType="INTEGER" property="isDeleted" />
    <result column="create_by" jdbcType="INTEGER" property="createBy" />
    <result column="update_by" jdbcType="INTEGER" property="updateBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, device_code, device_type, device_name, device_status, device_address, device_monitor_url, 
    relation_code, is_deleted, create_by, update_by, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.building.dao.entity.DevicesDOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_devices
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_devices
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_devices
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.building.dao.entity.DevicesDO">
    insert into t_devices (id, device_code, device_type, 
      device_name, device_status, device_address, 
      device_monitor_url, relation_code, is_deleted, 
      create_by, update_by, create_time, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{deviceCode,jdbcType=VARCHAR}, #{deviceType,jdbcType=VARCHAR}, 
      #{deviceName,jdbcType=VARCHAR}, #{deviceStatus,jdbcType=VARCHAR}, #{deviceAddress,jdbcType=VARCHAR}, 
      #{deviceMonitorUrl,jdbcType=VARCHAR}, #{relationCode,jdbcType=VARCHAR}, #{isDeleted,jdbcType=INTEGER}, 
      #{createBy,jdbcType=INTEGER}, #{updateBy,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.building.dao.entity.DevicesDO">
    insert into t_devices
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="deviceCode != null">
        device_code,
      </if>
      <if test="deviceType != null">
        device_type,
      </if>
      <if test="deviceName != null">
        device_name,
      </if>
      <if test="deviceStatus != null">
        device_status,
      </if>
      <if test="deviceAddress != null">
        device_address,
      </if>
      <if test="deviceMonitorUrl != null">
        device_monitor_url,
      </if>
      <if test="relationCode != null">
        relation_code,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="deviceCode != null">
        #{deviceCode,jdbcType=VARCHAR},
      </if>
      <if test="deviceType != null">
        #{deviceType,jdbcType=VARCHAR},
      </if>
      <if test="deviceName != null">
        #{deviceName,jdbcType=VARCHAR},
      </if>
      <if test="deviceStatus != null">
        #{deviceStatus,jdbcType=VARCHAR},
      </if>
      <if test="deviceAddress != null">
        #{deviceAddress,jdbcType=VARCHAR},
      </if>
      <if test="deviceMonitorUrl != null">
        #{deviceMonitorUrl,jdbcType=VARCHAR},
      </if>
      <if test="relationCode != null">
        #{relationCode,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=INTEGER},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.building.dao.entity.DevicesDO">
    update t_devices
    <set>
      <if test="deviceCode != null">
        device_code = #{deviceCode,jdbcType=VARCHAR},
      </if>
      <if test="deviceType != null">
        device_type = #{deviceType,jdbcType=VARCHAR},
      </if>
      <if test="deviceName != null">
        device_name = #{deviceName,jdbcType=VARCHAR},
      </if>
      <if test="deviceStatus != null">
        device_status = #{deviceStatus,jdbcType=VARCHAR},
      </if>
      <if test="deviceAddress != null">
        device_address = #{deviceAddress,jdbcType=VARCHAR},
      </if>
      <if test="deviceMonitorUrl != null">
        device_monitor_url = #{deviceMonitorUrl,jdbcType=VARCHAR},
      </if>
      <if test="relationCode != null">
        relation_code = #{relationCode,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=INTEGER},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.building.dao.entity.DevicesDO">
    update t_devices
    set device_code = #{deviceCode,jdbcType=VARCHAR},
      device_type = #{deviceType,jdbcType=VARCHAR},
      device_name = #{deviceName,jdbcType=VARCHAR},
      device_status = #{deviceStatus,jdbcType=VARCHAR},
      device_address = #{deviceAddress,jdbcType=VARCHAR},
      device_monitor_url = #{deviceMonitorUrl,jdbcType=VARCHAR},
      relation_code = #{relationCode,jdbcType=VARCHAR},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      create_by = #{createBy,jdbcType=INTEGER},
      update_by = #{updateBy,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>