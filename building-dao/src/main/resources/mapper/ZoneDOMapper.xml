<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.building.dao.mapper.ZoneDOMapper">
  <resultMap id="BaseResultMap" type="com.building.dao.entity.ZoneDO">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="zone_code" jdbcType="VARCHAR" property="zoneCode" />
    <result column="zone_name" jdbcType="VARCHAR" property="zoneName" />
    <result column="order_index" jdbcType="INTEGER" property="orderIndex" />
    <result column="zone_level" jdbcType="INTEGER" property="zoneLevel" />
    <result column="is_deleted" jdbcType="INTEGER" property="isDeleted" />
    <result column="create_by" jdbcType="INTEGER" property="createBy" />
    <result column="update_by" jdbcType="INTEGER" property="updateBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, zone_code, zone_name, order_index, zone_level, is_deleted, create_by, update_by, 
    create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.building.dao.entity.ZoneDOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_zone
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_zone
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_zone
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.building.dao.entity.ZoneDO">
    insert into t_zone (id, zone_code, zone_name, 
      order_index, zone_level, is_deleted, 
      create_by, update_by, create_time, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{zoneCode,jdbcType=VARCHAR}, #{zoneName,jdbcType=VARCHAR}, 
      #{orderIndex,jdbcType=INTEGER}, #{zoneLevel,jdbcType=INTEGER}, #{isDeleted,jdbcType=INTEGER}, 
      #{createBy,jdbcType=INTEGER}, #{updateBy,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.building.dao.entity.ZoneDO">
    insert into t_zone
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="zoneCode != null">
        zone_code,
      </if>
      <if test="zoneName != null">
        zone_name,
      </if>
      <if test="orderIndex != null">
        order_index,
      </if>
      <if test="zoneLevel != null">
        zone_level,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="zoneCode != null">
        #{zoneCode,jdbcType=VARCHAR},
      </if>
      <if test="zoneName != null">
        #{zoneName,jdbcType=VARCHAR},
      </if>
      <if test="orderIndex != null">
        #{orderIndex,jdbcType=INTEGER},
      </if>
      <if test="zoneLevel != null">
        #{zoneLevel,jdbcType=INTEGER},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=INTEGER},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.building.dao.entity.ZoneDO">
    update t_zone
    <set>
      <if test="zoneCode != null">
        zone_code = #{zoneCode,jdbcType=VARCHAR},
      </if>
      <if test="zoneName != null">
        zone_name = #{zoneName,jdbcType=VARCHAR},
      </if>
      <if test="orderIndex != null">
        order_index = #{orderIndex,jdbcType=INTEGER},
      </if>
      <if test="zoneLevel != null">
        zone_level = #{zoneLevel,jdbcType=INTEGER},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=INTEGER},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.building.dao.entity.ZoneDO">
    update t_zone
    set zone_code = #{zoneCode,jdbcType=VARCHAR},
      zone_name = #{zoneName,jdbcType=VARCHAR},
      order_index = #{orderIndex,jdbcType=INTEGER},
      zone_level = #{zoneLevel,jdbcType=INTEGER},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      create_by = #{createBy,jdbcType=INTEGER},
      update_by = #{updateBy,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>